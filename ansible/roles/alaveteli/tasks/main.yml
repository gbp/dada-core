---
# Setup alaveteli and dependencies
# but not MTA, DB, which are in separate roles

# Setup based on https://alaveteli.org/docs/installing/manual_install/

- name: Create alaveteli user
  become: yes
  user:
    name: alaveteli
    comment: Alaveteli
    groups: adm
    password_lock: yes

- name: Create directory for alaveteli source (1/2)
  become: yes
  file:
    path: /var/www
    owner: alaveteli
    group: alaveteli
    state: directory

- name: Create directory for alaveteli source (2/2)
  become: yes
  file:
    path: "{{ alaveteli_path }}"
    owner: alaveteli
    group: alaveteli
    state: directory

- name: Clone alaveteli repository
  become: yes
  become_user: alaveteli
  git:
    repo: https://github.com/mysociety/alaveteli.git
    dest: "{{ alaveteli_path }}"
    version: master
    depth: 1
    recursive: yes

- name: Apt update and upgrade
  become: yes
  apt:
    update_cache: yes
    upgrade: safe

- name: Install apt packages needed by Alaveteli
  become: yes
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      # list copied from alaveteli/config/packages
    - build-essential
    - bundler
    - catdoc
    - elinks
    - exim4
    - geoip-database
    - gettext
    - ghostscript
    - gnuplot-nox
    - imagemagick
    - irb
    - libapache2-mod-passenger
    - libicu-dev
    - libmagic-dev
    - libmagickwand-dev
    - libpq-dev
    - libsqlite3-dev
    - libxml2-dev
    - libxslt1-dev
    - links
    - lockfile-progs
    - memcached
    - mutt
    - pdftk
    - poppler-utils
    - python-psycopg2
    - python-yaml
    - rake
    - rdoc
    - ruby
    - ruby-dev
    - sqlite3
    - tnef
    - ttf-bitstream-vera
    - unrtf
    - unzip
    - uuid-dev
    - wkhtmltopdf
    - wv
    - xapian-tools

#
# DATABASE / POSTGRESQL
#
# based on https://alaveteli.org/docs/installing/manual_install/#configure-database

- name: Create template database
  become: yes
  become_user: postgres
  postgresql_db:
    name: template_utf8
    encoding: "UTF-8"
    template: template0

- name: Mark template_utf8 as template DB
  shell: psql -c "update pg_database set datistemplate=true where datname='template_utf8';"

- name: Create alaveteli databases
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ item }}"
    owner: "{{ db_user_name }}"
    template: template_utf8
  loop:
    - "{{ db_name_test }}"
    - "{{ db_name_production }}"

#
# EMAIL / MTA / EXIM
#

- name: Set Exim to receive email from other servers
  template:
    src: exim_update-exim4.conf.conf.j2
    dest: /etc/exim4/update-exim4.conf.conf

- name: Setup exim variables
  template:
    src: exim_04_alaveteli_options.j2
    dest: /etc/exim4/conf.d/main/04_alaveteli_options

- name: Add alaveteli to exim trusted users
  lineinfile:
    path: /etc/exim4/conf.d/main/02_exim4-config_options
    regexp: '^MAIN_TRUSTED_USERS = uucp'
    line: 'MAIN_TRUSTED_USERS = uucp : alaveteli'

- name: Create backupfoi user
  become: yes
  user:
    name: backupfoi
    comment: Alaveteli mail backup
    password_lock: yes

- name: Set Exim router to pipe incoming emails to alaveteli
  template:
    src: exim_router_04_alaveteli.j2
    dest: /etc/exim4/conf.d/router/04_alaveteli

- name: Set Exim transport to pipe incoming emails to alaveteli
  template:
    src: exim_transport_04_alaveteli.j2
    dest: /etc/exim4/conf.d/transport/04_alaveteli

- name: Create exim aliases for the router
  template:
    src: exim_config_aliases.j2
    dest: "{{ alaveteli_path }}/config/aliases"

- name: Update exim config
  shell: /usr/sbin/update-exim4.conf

- name: Restart exim
  service:
    name: exim4
    state: restarted
